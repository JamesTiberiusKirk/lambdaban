name: CI â€“ Build, Test & Push

on:
  push:
    branches:
      - master

env:
  REGISTRY: ghcr.io

permissions:
  contents: read
  packages: write
  attestations: write
  id-token: write

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.x'

      - name: Install dependencies
        run: go get ./...

      - name: Build
        run: go build -v ./...

      - name: Get templ version
        id: templ-version
        run: |
          echo "VERSION=$(go list -m -f '{{.Version}}' github.com/a-h/templ)" >> $GITHUB_OUTPUT

      - name: Generate templates
        run: go run github.com/a-h/templ/cmd/templ@${{ steps.templ-version.outputs.VERSION }} generate --include-version=false

      - name: Assert generated templates match committed
        run: |
          git add -A
          git diff --exit-code

      - name: Test with Go
        run: go test ./...

  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      migrator_changed: ${{ steps.filter.outputs.migrator }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Detect changed folders
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            web:
              - 'cmd/web/**'
            migrator:
              - 'cmd/migrator/**'

  build-and-push:
    needs: [build-and-test, detect-changes]
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        service: [web, migrator]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Determine lowercase image name
        id: lc
        run: |
          echo "IMAGE_NAME=$(echo $GITHUB_REPOSITORY | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract image metadata (tags & labels)
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ steps.lc.outputs.IMAGE_NAME }}

      - name: Build & push ${{ matrix.service }} image
        if: >
          matrix.service == 'web' ||
          needs.detect-changes.outputs.migrator_changed == 'true'
        id: push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./cmd/${{ matrix.service }}/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ steps.lc.outputs.IMAGE_NAME }}:${{ matrix.service }}-master
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate artifact attestation for ${{ matrix.service }}
        if: >
          matrix.service == 'web' ||
          needs.detect-changes.outputs.migrator_changed == 'true'
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ steps.lc.outputs.IMAGE_NAME }}:${{ matrix.service }}-master
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
