services:
  traefik:
    image: traefik:v3.0.0
    command:
      - "--api.dashboard=true"
      - "--api.insecure=false"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.web.address=:80"
      # Uncomment for HTTPS (and add certs):
      - "--entryPoints.websecure.address=:443"
      - "--metrics.prometheus=true"
      - "--metrics.prometheus.addEntryPointsLabels=true"
      - "--metrics.prometheus.addServicesLabels=true"
      # Uncomment and configure for production SSL:
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.myresolver.acme.email=your@email.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443" # Uncomment for HTTPS
      # Dashboard only accessible from internal network
      # - "127.0.0.1:8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./letsencrypt:/letsencrypt" # Uncomment for HTTPS certs
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.lambdaban.vulpe.dev`)"
      - "traefik.http.routers.traefik.entrypoints=web"
      - "traefik.http.routers.traefik.service=api@internal"
      # Uncomment for HTTPS
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.tls.certresolver=myresolver"
    restart: always

  lambdaban:
    build:
      context: .
      dockerfile: ./cmd/web/Dockerfile
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.lambdaban.rule=Host(`lambdaban.vulpe.dev`)"
      - "traefik.http.routers.lambdaban.entrypoints=web"
      # Uncomment for HTTPS
      - "traefik.http.routers.lambdaban.entrypoints=websecure"
      - "traefik.http.routers.lambdaban.tls.certresolver=myresolver"
      - "traefik.http.services.lambdaban.loadbalancer.server.port=8080"
    environment:
      PORT: 8080
    expose:
      - "8080"
    restart: always

  prometheus:
    image: prom/prometheus:v2.52.0
    volumes:
      - prometheus_data:/prometheus
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    # Don't expose Prometheus to public internet
    # ports:
    #   - "9090:9090"
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.lambdaban.vulpe.dev`)"
      - "traefik.http.routers.prometheus.entrypoints=web"
      # Uncomment for HTTPS
      - "traefik.http.routers.prometheus.entrypoints=websecure"
      - "traefik.http.routers.prometheus.tls.certresolver=myresolver"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
    expose:
      - "9090"
    restart: always

  grafana:
    image: grafana/grafana:10.3.1
    volumes:
      - ./grafana/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    # Don't expose Grafana to public internet
    # ports:
    #   - "3000:3000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.lambdaban.vulpe.dev`)"
      - "traefik.http.routers.grafana.entrypoints=web"
      # Uncomment for HTTPS
      - "traefik.http.routers.grafana.entrypoints=websecure"
      - "traefik.http.routers.grafana.tls.certresolver=myresolver"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
    expose:
      - "3000"
    depends_on:
      - prometheus
    restart: always

volumes:
  prometheus_data:
  grafana_data:

networks:
  default:
    name: traefik
