version: '3.8'

services:

  lambdaban:
    image: ghcr.io/jamestiberiuskirk/lambdaban-web:master
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.lambdaban.rule=Host(`lambdaban.vulpe.dev`)"
      - "traefik.http.routers.lambdaban.entrypoints=web,websecure"
      - "traefik.http.routers.lambdaban.tls.certresolver=myresolver"
      - "traefik.http.services.lambdaban.loadbalancer.server.port=3001"
      - "traefik.http.services.lambdaban.loadbalancer.sticky=true"
      - "traefik.http.services.lambdaban.loadbalancer.sticky.cookie.name=sticky_lambdaban"
      - "com.centurylinklabs.watchtower.enable=true"
    environment:
      PORT: 3001
      METRICS_PORT: 3002
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_NAME: ${DB_NAME}
      DB_HOST: db
    deploy:
      mode: replicated
      replicas: 3
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/healthcheck"]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      migrator:
        condition: service_completed_successfully
    expose:
      - "3001"
      - "3002"

  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./.db-mount:/var/lib/postgresql/data/

  traefik:
    image: traefik:latest
    command:
      - "--api.dashboard=false"
      - "--api.insecure=false"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.web.address=:80"
      - "--entryPoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.myresolver.acme.email=dumitru.v.dv@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./letsencrypt:/letsencrypt"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.lambdaban.vulpe.dev`)"
      - "traefik.http.routers.traefik.entrypoints=web,websecure"
      - "traefik.http.routers.traefik.tls.certresolver=myresolver"
      - "traefik.http.routers.traefik.service=api@internal"
    restart: always

  watchtower:
    image: containrrr/watchtower
    command:
      - "--label-enable"
      - "--interval"
      - "30"
      - "--rolling-restart"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - prometheus_data:/prometheus
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.lambdaban.vulpe.dev`)"
      - "traefik.http.routers.prometheus.entrypoints=web,websecure"
      - "traefik.http.routers.prometheus.tls.certresolver=myresolver"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
    expose:
      - "9090"
    restart: always

  grafana:
    image: grafana/grafana:latest
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./grafana/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
      - grafana_data:/var/lib/grafana
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.lambdaban.vulpe.dev`)"
      - "traefik.http.routers.grafana.entrypoints=web,websecure"
      - "traefik.http.routers.grafana.tls.certresolver=myresolver"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
    expose:
      - "3000"
    depends_on:
      - prometheus
    restart: always

volumes:
  prometheus_data:
  grafana_data:

networks:
  default:
    name: traefik
